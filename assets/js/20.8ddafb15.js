(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{425:function(t,s,e){"use strict";e.r(s);var a=e(34),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"servlet-学习笔记"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#servlet-学习笔记"}},[t._v("#")]),t._v(" servlet 学习笔记")]),t._v(" "),e("h2",{attrs:{id:"_1-servlet是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-servlet是什么"}},[t._v("#")]),t._v(" 1.servlet是什么")]),t._v(" "),e("p",[t._v("​\tJava Servlet 是运行在 Web 服务器或应用服务器上的程序，它可以用来处理HTTP请求。")]),t._v(" "),e("p",[t._v("​\t但实际上 Servlet 本身只是一个规范,在代码上表现为接口,真正处理 HTTP 请求的是 Servlet 的实现类。用户可以实现 Servlet ，然后将 Servlet 的实现类放在 Servlet 容器中（例如 Tomcat），容器去监听 HTTP 请求，然后根据URL调用对应的 Servle来处理请求。")]),t._v(" "),e("h2",{attrs:{id:"_2-生命周期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-生命周期"}},[t._v("#")]),t._v(" 2. 生命周期")]),t._v(" "),e("p",[t._v("Servlet 从创建到销毁会经过三个过程：")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("init（）")]),t._v(" "),e("p",[t._v("servlet 通过 init（）方法进行初始化，可以在这里加载所需要的资源")])]),t._v(" "),e("li",[e("p",[t._v("service（）")]),t._v(" "),e("p",[t._v("servlet 的 service（）方法负责处理请求，并返回对应信息。")])]),t._v(" "),e("li",[e("p",[t._v("destroy（）")]),t._v(" "),e("p",[t._v("servlet 的 destroy（）方法负责执行销毁操作，可以在这里释放相关的资源，当 servlet 被销毁的时候就会调用 destroy （）方法。")])])]),t._v(" "),e("h2",{attrs:{id:"_3-servlet的执行流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-servlet的执行流程"}},[t._v("#")]),t._v(" 3. Servlet的执行流程")]),t._v(" "),e("h3",{attrs:{id:"_1-如何配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-如何配置"}},[t._v("#")]),t._v(" (1)如何配置")]),t._v(" "),e("p",[t._v("servlet 的实现类创建好后，需要在项目的 "),e("code",[t._v("web/WEB-INF/web.xml")]),t._v(" 中进行配置，只有配置之后，才能让 Servlet 容器根据 URL 调用对应的 Servlet 进行处理。")]),t._v(" "),e("div",{staticClass:"language-xml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-xml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token prolog"}},[t._v('<?xml version="1.0" encoding="UTF-8"?>')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("web-app")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("xmlns")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://xmlns.jcp.org/xml/ns/javaee"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n         "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("xmlns:")]),t._v("xsi")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://www.w3.org/2001/XMLSchema-instance"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n         "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("xsi:")]),t._v("schemaLocation")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n         "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("version")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("4.0"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!--    声明一个 Servlet 的存在,并且为它定义一个名字--\x3e")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("servlet")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("servlet-name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("ServletName"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("servlet-name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("servlet-class")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("DemoServlet"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("servlet-class")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("servlet")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!--    声明一个映射关系并且为 ServletName 对应的 Servlet 指定一个 URL--\x3e")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("servlet-mapping")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("servlet-name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("ServletName"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("servlet-name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("url-pattern")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("/ServletURL"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("url-pattern")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("servlet-mapping")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("web-app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),e("h3",{attrs:{id:"_2-内部是如何处理实现的"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-内部是如何处理实现的"}},[t._v("#")]),t._v(" (2) 内部是如何处理实现的")]),t._v(" "),e("p",[t._v("通过上面的配置，可以让 Servlet 容器根据 "),e("code",[t._v("URL")]),t._v(" 调用对应的 "),e("code",[t._v("Servlet")]),t._v("实例，具体来说就是调用 "),e("code",[t._v("Servlet#service")]),t._v("方法.")]),t._v(" "),e("p",[t._v("如果是直接实现 "),e("code",[t._v("Servlet")]),t._v("接口，那么就可以在 "),e("code",[t._v("Servlet#service")]),t._v("方法写业务代码即可，根据请求的方法（"),e("code",[t._v("GET")]),t._v("、"),e("code",[t._v("POST")]),t._v("、"),e("code",[t._v("PUT")]),t._v("、"),e("code",[t._v("DELETE")]),t._v("等方法）决定如何处理此次请求。")]),t._v(" "),e("p",[t._v("不过 Java 也有其他实现了 "),e("code",[t._v("Servlet")]),t._v("接口的抽象类，对其进行了封装，有更多较为方便的操作。例如"),e("code",[t._v("HttpServlet")]),t._v("类，一般创建"),e("code",[t._v("servlet")]),t._v("实现类的时候都是实现的"),e("code",[t._v("HttpServlet")]),t._v("，它提供了两个必须被实现的抽象方法"),e("code",[t._v("doGet")]),t._v("与"),e("code",[t._v("doPost")]),t._v("，在类的内部直接根据请求的方法分别调用这两个抽象方法，若是继承了 "),e("code",[t._v("HttpServlet")]),t._v("，则可以只实现这两个方法就可以运行。")]),t._v(" "),e("h2",{attrs:{id:"_4-servlet三大域对象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-servlet三大域对象"}},[t._v("#")]),t._v(" 4. Servlet三大域对象")]),t._v(" "),e("p",[e("code",[t._v("Servlet")]),t._v("有三大域对象：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("request")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("类型：ServletRequest")])]),t._v(" "),e("li",[e("p",[t._v("作用域：当前请求")])]),t._v(" "),e("li",[e("p",[t._v("创建时间："),e("code",[t._v("Servlet")]),t._v("接到一个请求的时候就创建一个 request")])]),t._v(" "),e("li",[e("p",[t._v("销毁时间：请求结束时被销毁")])]),t._v(" "),e("li",[e("p",[t._v("使用场景：用于在"),e("code",[t._v("HTTP")]),t._v("客户端与服务端应用间传输数据，也可以通过"),e("code",[t._v("请求转发")]),t._v("在"),e("code",[t._v("Servlet")]),t._v("之间传输。")])]),t._v(" "),e("li",[e("p",[t._v("使用方法：")]),t._v(" "),e("div",{staticClass:"language-Java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("doGet")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("javax"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("servlet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("http"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("HttpServletRequest")]),t._v(" request"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("javax"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("servlet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("http"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("HttpServletResponse")]),t._v(" response"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("javax"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("servlet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("ServletException")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获取 HTTP 客户端传递的参数")]),t._v("\n        request"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getParameter")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"keyOne"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设置一个属性到 request 中，指定属性名与值,值可以是对象,可在转发到其他 Servlet 中的时候被使用")]),t._v("\n        request"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setAttribute")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"keyThree"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获取之前设置的属性值")]),t._v("\n        request"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAttribute")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"keyTwo"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获取 HTTP 客户端传递的请求头")]),t._v("\n        request"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getHeader")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Host"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])]),t._v(" "),e("li",[e("p",[t._v("session")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("类型：HttpSession")])]),t._v(" "),e("li",[e("p",[t._v("作用域：当前会话有效，会话就是用户浏览器访问页面后到"),e("code",[t._v("session")]),t._v("过期或者用户关闭页面的这段时间")])]),t._v(" "),e("li",[e("p",[t._v("创建时间：用户第一次访问页面时")])]),t._v(" "),e("li",[e("p",[t._v("销毁时间："),e("code",[t._v("session")]),t._v("过期或者被手动调用"),e("code",[t._v("session. invalidate()")]),t._v("方法后销毁")])]),t._v(" "),e("li",[e("p",[t._v("使用场景：因为在"),e("code",[t._v("session")]),t._v("中的数据可以在用户的整个会话中被访问，可以存储用户的临时数据，或者保存用户的登录状态等等，不过因为"),e("code",[t._v("session")]),t._v("的访问依赖 "),e("code",[t._v("cookie")]),t._v("，而"),e("code",[t._v("cookie")]),t._v("是不安全的，所以"),e("code",[t._v("servlet")]),t._v("的"),e("code",[t._v("session")]),t._v("也有较大的数据泄露风险。")])]),t._v(" "),e("li",[e("p",[t._v("使用方法：")]),t._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("doGet")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("javax"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("servlet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("http"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("HttpServletRequest")]),t._v(" request"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("javax"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("servlet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("http"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("HttpServletResponse")]),t._v(" response"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("javax"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("servlet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("ServletException")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//根据请求获取对应的 session")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpSession")]),t._v(" session "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" request"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSession")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//向 session 中设置属性,并指定属性名与值,方便在下次请求中使用")]),t._v("\n        session"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setAttribute")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"keyFour"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//根据属性名获取之前设置的值")]),t._v("\n        session"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAttribute")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"keyFour"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//删除一个属性")]),t._v("\n        session"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeAttribute")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"keyFour"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//销毁当前的 session")]),t._v("\n        session"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("invalidate")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])]),t._v(" "),e("li",[e("p",[t._v("application")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("类型：ServletContext")])]),t._v(" "),e("li",[e("p",[t._v("作用域：整个应用")])]),t._v(" "),e("li",[e("p",[t._v("创建时间：应用启动时")])]),t._v(" "),e("li",[e("p",[t._v("销毁时间：应用销毁时")])]),t._v(" "),e("li",[e("p",[t._v("使用场景：可以存储应用的状态，例如存储当前的在线人数等")])]),t._v(" "),e("li",[e("p",[t._v("使用方法：")]),t._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("doGet")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("javax"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("servlet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("http"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("HttpServletRequest")]),t._v(" request"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("javax"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("servlet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("http"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("HttpServletResponse")]),t._v(" response"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("javax"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("servlet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("ServletException")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        \n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获取应用上下文,this.getServletContext()并非是 Servlet 接口的方法,而是实现了 Servlet 接口的 HttpServlet 抽象类所提供的方法")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//HttpServlet 抽象类同时也实现了 ServletConfig,getServletContext()方法就是 ServletConfig 接口提供的")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServletContext")]),t._v(" context "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getServletContext")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("////向 Application 中设置属性,并指定属性名与值,这个属性在整个应用范围都可以被访问")]),t._v("\n        context"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setAttribute")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"keyFive"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//通过一个属性名,获取对应属性的值")]),t._v("\n        context"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAttribute")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"keyFive"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//通过属性名,删除一个属性")]),t._v("\n        context"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeAttribute")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"keyFive"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])])]),t._v(" "),e("h2",{attrs:{id:"_5-servlet的请求和响应"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-servlet的请求和响应"}},[t._v("#")]),t._v(" 5. servlet的请求和响应")]),t._v(" "),e("p",[e("code",[t._v("当Servlet")]),t._v("容器接到请求的时候，就会去调用对应"),e("code",[t._v("Servlet")]),t._v("的 "),e("code",[t._v("service（）")]),t._v("方法，"),e("code",[t._v("Servlet#service")]),t._v("方法有需要两个参数：")]),t._v(" "),e("p",[e("code",[t._v("request：ServletRequest")]),t._v("：携带"),e("code",[t._v("HTTP")]),t._v("请求的相关信息，包括请求参数、请求头等数据。")]),t._v(" "),e("p",[e("code",[t._v("response：ServletResponse")]),t._v("：请求处理完成后要返回的对象，如果有需要返回的数据可以通过此对象返回。")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("request")]),t._v("可以访问客户端传来的参数，如果此次请求是被转发而来，也可以获得其他"),e("code",[t._v("Servlet")]),t._v("设置的属性，通过"),e("code",[t._v("request")]),t._v("可以获得此次请求的方法，可以根据方法选择对应的处理方式。也可以通过"),e("code",[t._v("request")]),t._v("将此次的请求转发到其他"),e("code",[t._v("Servlet")]),t._v("，也可以通过"),e("code",[t._v("request")]),t._v("获得当前会话的"),e("code",[t._v("session")]),t._v("，对一些数据进行暂时的存储。")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("response")]),t._v("装载着需要返回给客户端的数据。可以设置请求的状态值、返回错误给客户端，错误可以携带提示信息。也可以将当前请求重定向到新的地址，重定向跟转发不一样，无法携带"),e("code",[t._v("request")]),t._v("，所以没法共享当前"),e("code",[t._v("Servlet")]),t._v("的数据，重定向就相当于让客户端重新发起了一个新的请求到另一个"),e("code",[t._v("URL")]),t._v("。")])])]),t._v(" "),e("h2",{attrs:{id:"_6-servlet的单实例多线程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-servlet的单实例多线程"}},[t._v("#")]),t._v(" 6. servlet的单实例多线程")]),t._v(" "),e("p",[e("code",[t._v("Servlet")]),t._v("是单实例的，当"),e("code",[t._v("Servlet容器")]),t._v("接到一个请求时，首先检查对应的"),e("code",[t._v("Servlet")]),t._v("实例是否已经被创建，如果已经被创建了，就不会再创建。")]),t._v(" "),e("p",[t._v("但是 "),e("code",[t._v("Servlet")]),t._v("是在多线程环境下运行的，每当容器接到一个请求，就会分配或创建一个线程去执行"),e("code",[t._v("Servlet")]),t._v("，单例的"),e("code",[t._v("Servlet")]),t._v("节省了每次都创建"),e("code",[t._v("Servlet")]),t._v("的资源浪费，但是也会使得"),e("code",[t._v("Servlet")]),t._v("有线程不安全的风险，解决线程不安全有两种：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("不在"),e("code",[t._v("Servlet")]),t._v("中创建任何属性,避免多个线程访问同一个属性，导致线程不安全。")])]),t._v(" "),e("li",[e("p",[t._v("使用"),e("code",[t._v("synchronized")]),t._v("关键字为使用到的"),e("code",[t._v("Servlet")]),t._v("属性加锁。")]),t._v(" "),e("p",[t._v("相对来说使用第一种方法较好，因为"),e("code",[t._v("synchronized")]),t._v("较为耗费资源，如果可以避免使用属性，则可以提高许多性能。")])])]),t._v(" "),e("h2",{attrs:{id:"_7-session-与-cookie"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-session-与-cookie"}},[t._v("#")]),t._v(" 7. session 与 cookie")]),t._v(" "),e("p",[t._v("简单来说"),e("code",[t._v("session")]),t._v("中的数据是存储在服务器内存中的,"),e("code",[t._v("cookie")]),t._v("是存储在客户端浏览器中的.")]),t._v(" "),e("p",[e("code",[t._v("cookie")]),t._v("只能存储ASCII字符串,按照键值对的形式存储在客户端的内存或者硬盘中,具体是存储在内存还是硬盘要看"),e("code",[t._v("cookie")]),t._v("的过期时间,如果没有设置过期时间,那么"),e("code",[t._v("cookie")]),t._v("的有效期是在用户关闭页面前,这个时候就是存储在内存中,如果设置的有效时间,那么就是存储在硬盘中,浏览器一般会给每个"),e("code",[t._v("cookie")]),t._v("设置其所属域名,在请求资源的时候会自动带上对应域名的"),e("code",[t._v("cookie")]),t._v(".")]),t._v(" "),e("p",[e("code",[t._v("cookie")]),t._v("可以通过"),e("code",[t._v("JavaScript")]),t._v("代码在浏览器环境设置,也可以通过在请求后端服务器时服务器返回响应头携带来设置"),e("code",[t._v("cookie")]),t._v(".因为"),e("code",[t._v("cookie")]),t._v("相对于用户是可见的,并且会随着请求自动的发送"),e("code",[t._v("cookie")]),t._v(",所以"),e("code",[t._v("cookie")]),t._v("是不安全的,容易被非法用户获取到用户的隐私信息,容易被CSRF(跨站请求伪造)攻击.")]),t._v(" "),e("p",[e("code",[t._v("seesion")]),t._v("的数据是存储在服务器内存中的,同样是以键值对的方式存储,存储类型可以是任何Java类型或对象,"),e("code",[t._v("seesion")]),t._v("的有效期最长是一个会话时间,"),e("code",[t._v("HTTP")]),t._v("请求是没有状态的,识别会话是否结束是通过浏览器"),e("code",[t._v("cookie")]),t._v(",当服务器获得一个请求就会检查请求头中是否有"),e("code",[t._v("sessionId")]),t._v("字段,如果有,就按照"),e("code",[t._v("sessionId")]),t._v("获取对应的"),e("code",[t._v("session")]),t._v(",如果没有,则创建一个新的"),e("code",[t._v("session")]),t._v("并且将"),e("code",[t._v("sessionId")]),t._v("放到响应头,存储到客户端浏览器的"),e("code",[t._v("cookie")]),t._v("中,以便下次访问服务器的时候可以识别会话,所以"),e("code",[t._v("session")]),t._v("的会话时间其实是根据自动传递的"),e("code",[t._v("cookie")]),t._v("来识别的,根据"),e("code",[t._v("cookieId")]),t._v("的不同"),e("code",[t._v("session")]),t._v("也不同,所以也可以说是"),e("code",[t._v("cookie")]),t._v("决定了"),e("code",[t._v("session")]),t._v(".这样一来如果"),e("code",[t._v("cookie")]),t._v("泄露,那么尽管"),e("code",[t._v("session")]),t._v("是存储在服务器内存中也会有数据泄露的风险.")]),t._v(" "),e("h2",{attrs:{id:"_8-web-http请求过程-包括了解浏览器资源加载渲染原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-web-http请求过程-包括了解浏览器资源加载渲染原理"}},[t._v("#")]),t._v(" 8.web http请求过程（包括了解浏览器资源加载渲染原理）")]),t._v(" "),e("p",[t._v("从输入"),e("code",[t._v("URL")]),t._v("到浏览器中的地址栏进行访问,到浏览器进行页面渲染请求结束经过了6个步骤:")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("DNS 解析")]),t._v(" "),e("p",[t._v("解析出"),e("code",[t._v("URL")]),t._v("中的域名,请求"),e("code",[t._v("DNS")]),t._v("服务器,获得对应域名的 IP 地址")])]),t._v(" "),e("li",[e("p",[t._v("TCP 连接")]),t._v(" "),e("p",[t._v("获取到IP地址后将确认客户端与服务器之间的网络是否通畅,需要进行三次握手以确保互相能够听到对方发出的信息,三次握手顺序如下:")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("客户端发送报文:"),e("code",[t._v("SYN=1 Seq=X")])]),t._v(" "),e("p",[t._v("其中"),e("code",[t._v("SYN=1")]),t._v("表示向服务器要求要建立连接,"),e("code",[t._v("Seq=X")]),t._v("代表当前的请求码,其中"),e("code",[t._v("X")]),t._v("是随机的整型数值.")])]),t._v(" "),e("li",[e("p",[t._v("服务器回应报文:"),e("code",[t._v("SYN=1 ACK=X+1 Seq=Y")])]),t._v(" "),e("p",[t._v("其中"),e("code",[t._v("SYN=1")]),t._v("表示服务器统一建立连接,"),e("code",[t._v("ACK=X+1")]),t._v("中的"),e("code",[t._v("X")]),t._v("是之前客户端发向服务器的"),e("code",[t._v("Seq")]),t._v("的值,将其加一之后发送回客户端表示服务器接到了客户端的请求,并且接到的数据无误,"),e("code",[t._v("Seq=Y")]),t._v("是代表本次报文发送的请求码.")])]),t._v(" "),e("li",[e("p",[t._v("客户端回应报文:"),e("code",[t._v("ACK=Y+1 Seq=Z")])]),t._v(" "),e("p",[t._v("客户端接收到服务器的回应报文后,检查其"),e("code",[t._v("ACK")]),t._v("的值,是否是之前客户端发送的"),e("code",[t._v("Seq")]),t._v("值加一,如果是的话,就将服务器回应报文的"),e("code",[t._v("Seq")]),t._v("的值加一,放到"),e("code",[t._v("ACK")]),t._v("中返回,并且随机生成并发送本次请求码"),e("code",[t._v("Seq=Z")]),t._v(".")])])]),t._v(" "),e("p",[t._v("经过三次握手之后,客户端可以确认服务器能够接收到自己发送的信息,服务器也可以确认客户端可以接受到自己发送的信息.")])]),t._v(" "),e("li",[e("p",[t._v("发送 HTTP 请求")]),t._v(" "),e("p",[t._v("经过三次握手后就真正的开始发送请求,请求包括三个部分:")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("请求行")]),t._v(" "),e("p",[t._v("请求行包括:请求方法,URL,协议版本三个信息")])]),t._v(" "),e("li",[e("p",[t._v("请求头")]),t._v(" "),e("p",[t._v("请求头以回车与换行作为字段与字段的分界,在字段中以"),e("code",[t._v(":")]),t._v("来分割字段名与字段值.")])]),t._v(" "),e("li",[e("p",[t._v("请求体")]),t._v(" "),e("p",[t._v("请求体是具体的字符串数据")])])])]),t._v(" "),e("li",[e("p",[t._v("服务器处理请求并返回 HTTP 报文")]),t._v(" "),e("p",[t._v("服务器返回的报文中有三个部分:相应行、响应头、响应体,响应头与响应体跟请求头、请求体的格式一样,但是响应头是不大一样,响应头包含了协议版本、状态码、原因短语也就是消息。")])]),t._v(" "),e("li",[e("p",[t._v("浏览器解析渲染页面")]),t._v(" "),e("p",[t._v("浏览器解析渲染页面分为一下五个步骤：")]),t._v(" "),e("ul",[e("li",[t._v("根据 HTML 解析出 DOM 树")]),t._v(" "),e("li",[t._v("根据 CSS 解析生成 CSS 规则树")]),t._v(" "),e("li",[t._v("结合 DOM 树和 CSS 规则树，生成渲染树")]),t._v(" "),e("li",[t._v("根据渲染树计算每一个节点的信息")]),t._v(" "),e("li",[t._v("根据计算好的信息绘制页面")])])]),t._v(" "),e("li",[e("p",[t._v("断开连接")]),t._v(" "),e("p",[t._v("数据传送完毕需要断开连接，断开连接需要经过TCP 四次握手，断开连接一般是客户端主动断开连接，四次握手发送的报文如下：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("客户端发送报文："),e("code",[t._v("Fin=1 ACK=Z Seq=X")])]),t._v(" "),e("p",[e("code",[t._v("Fin=1")]),t._v("表示要断开连接客户端没有数据要发送了，"),e("code",[t._v("ACK=Z")]),t._v("表示发送一个确认码，"),e("code",[t._v("Seq=X")]),t._v("代表当前的请求码,客户端进入"),e("code",[t._v("FIN_WATI_1")]),t._v("状态。")])]),t._v(" "),e("li",[e("p",[t._v("服务器回应报文："),e("code",[t._v("ACK=X+1 Seq=Z")])]),t._v(" "),e("p",[e("code",[t._v("ACK=X+1")]),t._v("表示接到断开连接的请求，直到没有数据要从客户端发送数据了，并确认信息无误。客户端进入"),e("code",[t._v("FIN_WATI_2")]),t._v("状态")])]),t._v(" "),e("li",[e("p",[t._v("服务器回应报文："),e("code",[t._v("Fin=1 ACK=X Seq=Y")])]),t._v(" "),e("p",[t._v("当服务端要发送的数据已经发送完毕，就发送此次报文，"),e("code",[t._v("Fin=1")]),t._v("表示请求断开连接，同时服务端进入"),e("code",[t._v("LAST_ACK")])])]),t._v(" "),e("li",[e("p",[t._v("客户端回应报文："),e("code",[t._v("ACK=Y Seq=X")])]),t._v(" "),e("p",[t._v("客户端确认收到断开连接请求，发送报文确认已收到。客户端进入"),e("code",[t._v("TIME_WATIE")]),t._v("，服务端收到此次报文后就会真正断开连接，客户端等待"),e("code",[t._v("2MSL")]),t._v("后没有收到回复的话，也断开连接。")])])])])])])}),[],!1,null,null,null);s.default=n.exports}}]);