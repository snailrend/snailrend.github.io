(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{427:function(s,e,t){"use strict";t.r(e);var a=t(34),_=Object(a.a)({},(function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"mysql语法学习"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mysql语法学习"}},[s._v("#")]),s._v(" mysql语法学习")]),s._v(" "),t("h3",{attrs:{id:"sql增删改查"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sql增删改查"}},[s._v("#")]),s._v(" SQL增删改查")]),s._v(" "),t("h4",{attrs:{id:"insert"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#insert"}},[s._v("#")]),s._v(" insert")]),s._v(" "),t("p",[s._v("语法：insert [into] <表名> [列名] values <列值>")]),s._v(" "),t("p",[s._v("如果要插入的数据包括所有字段,那么可以省略"),t("code",[s._v("[列名]")]),s._v(",但是数据的顺序需要是建表时的字段顺序")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" user_info"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("user_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("phone"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("gender"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Song'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'15999999999'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'男'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[s._v("也可以用于表数据的迁移:")]),s._v(" "),t("p",[s._v("语法：insert into <已有的新表> [列名] select <原表列名> from <原表名>")]),s._v(" "),t("p",[s._v("此处的"),t("code",[s._v("[列名]")]),s._v("同样可以省略")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" user_info_new "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" user_info_old "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" age"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[t("strong",[s._v("特别注意的是后面的 select 语句一定要加 where 条件,否则一定会进行全表扫描,如果是在生产环境,数据量极大又全表扫描的情况下会导致数据库宕机,导致其他服务受极大影响,不过如果加的 where 条件中的字段没有索引,也会导致全表扫描")])]),s._v(" "),t("h4",{attrs:{id:"delete"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#delete"}},[s._v("#")]),s._v(" delete")]),s._v(" "),t("p",[s._v("语法：delete from <表名> [where <删除条件>]")]),s._v(" "),t("p",[s._v("where 条件如果没有,则会删除整个表的数据")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("delete")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" user_info "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" user_name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Song'")]),s._v("\n")])])]),t("p",[s._v("如果要删除整张表的数据也可以使用下面这种方法:")]),s._v(" "),t("p",[s._v("语法：truncate table <表名>")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("truncate")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" user_info\n")])])]),t("h4",{attrs:{id:"update"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#update"}},[s._v("#")]),s._v(" update")]),s._v(" "),t("p",[s._v("语法：update <表名> set <列名=更新值> [where <更新条件>]")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("update")]),s._v(" user_info "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" age"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" user_name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Song'")]),s._v("\n")])])]),t("h4",{attrs:{id:"select"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#select"}},[s._v("#")]),s._v(" select")]),s._v(" "),t("p",[s._v("语法：select <列名> from <表名> [where <查询条件表达试>] [order by <排序的列名>[asc或desc]]")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" user_info "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" age"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" age "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("asc")]),s._v("\n")])])]),t("p",[t("code",[s._v("order by")]),s._v("语句可以限定根据某个字段进行排序,后面的"),t("code",[s._v("asc")]),s._v("代表升序,"),t("code",[s._v("desc")]),s._v("代表降序.")]),s._v(" "),t("p",[s._v("可以在查询语句最后加上"),t("code",[s._v("limit")]),s._v("限定查询结果的行数:")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("select * from user_info where age>=18 order by age asc limit 10\n")])])]),t("p",[s._v("也可以进行子查询:")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" user_info "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" age"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("user")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" gender"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'男'")]),s._v("\n")])])]),t("h3",{attrs:{id:"sql关联查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sql关联查询"}},[s._v("#")]),s._v(" SQL关联查询")]),s._v(" "),t("h4",{attrs:{id:"inner-join"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#inner-join"}},[s._v("#")]),s._v(" inner join")]),s._v(" "),t("p",[t("code",[s._v("inner join")]),s._v("可以将两张表根据条件连接在一起,条件不相等则不会出现在结果集中")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" user_info u "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("inner")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" guard g "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" u"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("user_id"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("g"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("user_id\n")])])]),t("p",[t("code",[s._v("inner join")]),s._v("也可简写成"),t("code",[s._v("join")])]),s._v(" "),t("p",[s._v("在"),t("code",[s._v("inner join")]),s._v("语句后面也可以加上"),t("code",[s._v("where")]),s._v("语句")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" user_info u "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("inner")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" guard g "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" u"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("user_id"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("g"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("user_id "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" u"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("age"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v("\n")])])]),t("h4",{attrs:{id:"left-join-right-join"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#left-join-right-join"}},[s._v("#")]),s._v(" left join/right join")]),s._v(" "),t("p",[t("code",[s._v("left join")]),s._v("与"),t("code",[s._v("right join")]),s._v("与"),t("code",[s._v("inner join")]),s._v("有所不同,它们会选取其中一个表作为主表,主表的数据,即使在"),t("code",[s._v("on")]),s._v("条件中没有符合,数据依然会出现在结果集中,"),t("code",[s._v("left join")]),s._v("是以左边的表为主表,"),t("code",[s._v("right join")]),s._v("是已右边的表作为主表.")]),s._v(" "),t("p",[s._v("下面的示例表示已"),t("code",[s._v("user_info")]),s._v("表作为主表,无论有另一个表有没有"),t("code",[s._v("user_id")]),s._v("字段相等的数据,主表的数据都会出现在结果集中.")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" user_info u "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("left")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" guard g "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" u"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("user_id"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("g"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("user_id \n")])])]),t("p",[s._v("如果换成 "),t("code",[s._v("right join")]),s._v("也可达到相同的效果:")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" guard g "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("right")]),s._v(" joinuser_info u "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" u"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("user_id"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("g"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("user_id \n")])])]),t("h4",{attrs:{id:"union"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#union"}},[s._v("#")]),s._v(" union")]),s._v(" "),t("p",[t("code",[s._v("union")]),s._v("就是并集操作,将两次查询的结果进行并集,默认是去除两个结果集中的重复记录")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" user_info "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" gender"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'男'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("union")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" user_info "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" age"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("50")]),s._v("\n")])])]),t("p",[s._v("如果想保留重复的记录,可以使用"),t("code",[s._v("union all")])]),s._v(" "),t("h3",{attrs:{id:"数据库字符集与校对规则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据库字符集与校对规则"}},[s._v("#")]),s._v(" 数据库字符集与校对规则")]),s._v(" "),t("p",[s._v("MySQL中的"),t("code",[s._v("utf8")]),s._v("字符集并不完整，只支持"),t("code",[s._v("3bytes")]),s._v("的文字，这是历史遗留问题，在MySQL中要使用"),t("code",[s._v("utf8mb4")]),s._v("才能支持占用"),t("code",[s._v("4bytes")]),s._v("的文字，一般而言都使用"),t("code",[s._v("utf8mb4")]),s._v("字符集。")]),s._v(" "),t("p",[s._v("校对规则比较常用的是"),t("code",[s._v("utf8mb4_general_ci")]),s._v("、"),t("code",[s._v("utf8mb4_unicode_ci")]),s._v("、"),t("code",[s._v("utf8mb4_bin")]),s._v("，校对规则的命名约定：以其相关的"),t("strong",[s._v("字符集名开始")]),s._v("，中间包括一个"),t("strong",[s._v("语言名")]),s._v("，并且以**_ci**（大小写不敏感）、"),t("strong",[s._v("_cs")]),s._v("（大小写敏感）或**_bin**（二元）结束。")]),s._v(" "),t("p",[s._v("以上常用的校对规则中，前两个两个是大小写不敏感的，最后一个是按照二进制来校对排序的，所以是大小写敏感的。")]),s._v(" "),t("blockquote",[t("p",[s._v("而"),t("code",[s._v("utf8mb4_unicode_ci")]),s._v("和"),t("code",[s._v("utf8mb4_general_ci")]),s._v("对于中文和英文来说，其实是没有任何区别的。对于我们开发的国内使用的系统来说，随便选哪个都行。只是对于某些西方国家的字母来说，"),t("code",[s._v("utf8mb4_unicode_ci")]),s._v("会比"),t("code",[s._v("utf8mb4_general_ci")]),s._v("更符合他们的语言习惯一些，"),t("code",[s._v("general")]),s._v("是mysql一个比较老的标准了。例如，德语字母"),t("code",[s._v("“ß”")]),s._v("，在"),t("code",[s._v("utf8mb4_unicode_ci")]),s._v("中是等价于"),t("code",[s._v('"ss"')]),s._v("两个字母的（这是符合德国人习惯的做法），而在"),t("code",[s._v("utf8mb4_general_ci")]),s._v("中，它却和字母"),t("code",[s._v("“s”")]),s._v("等价。不过，这两种编码的那些微小的区别，对于正常的开发来说，很难感知到。")]),s._v(" "),t("p",[s._v("作者：腾讯云加社区\n链接：https://juejin.im/post/5bfe5cc36fb9a04a082161c2\n来源：掘金\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。")])]),s._v(" "),t("p",[s._v("所以比较推荐使用"),t("code",[s._v("utf8mb4_unicode_ci")]),s._v("的校对规则。")]),s._v(" "),t("h3",{attrs:{id:"数据库索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据库索引"}},[s._v("#")]),s._v(" 数据库索引")]),s._v(" "),t("p",[s._v("索引可以优化数据库查询速度,应该在经常被查询的字段上使用索引,常见的"),t("code",[s._v("primary key")]),s._v("也是一种索引,索引的创建方法有三种,以下以普通索引为例:")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("直接创建索引")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),s._v(" indexName "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" mytable"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("username"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("length"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n")])])])]),s._v(" "),t("li",[t("p",[s._v("修改表结构添加索引")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" tableName "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),s._v(" indexName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("columnName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[s._v("创建表时指定索引")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" mytable"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("  \n \nID "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("   \n \nusername "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VARCHAR")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  \n \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("indexName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("username"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("length"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  \n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  \n")])])])])]),s._v(" "),t("p",[s._v("删除索引方式如下:")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DROP")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("indexName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" mytable"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n")])])]),t("p",[t("strong",[s._v("索引有以下类别")]),s._v(":")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("普通索引")])]),s._v(" "),t("li",[t("p",[s._v("唯一索引")]),s._v(" "),t("p",[s._v("建立索引的字段不可有重复值,修改表结构以及创建表结构的时候创建索引时不需要"),t("code",[s._v("index")]),s._v("关键字,只需要"),t("code",[s._v("unique")]),s._v("就行.")])]),s._v(" "),t("li",[t("p",[s._v("主键索引")]),s._v(" "),t("p",[s._v("主键索引是一种特殊的唯一索引,使用"),t("code",[s._v("primary key")]),s._v("关键字创建索引.")])]),s._v(" "),t("li",[t("p",[s._v("组合索引")]),s._v(" "),t("p",[s._v("组合索引就是在多一个字段上创建索引,使用索引时,在索引的左前缀集合中即可使用索引.")])]),s._v(" "),t("li",[t("p",[s._v("全文索引")]),s._v(" "),t("p",[s._v("用于查找文本的关键字,查询时配合"),t("code",[s._v("match aginst")]),s._v("使用.")])])]),s._v(" "),t("p",[t("strong",[s._v("索引使用注意事项")])]),s._v(" "),t("ol",[t("li",[s._v("索引不会包含有NULL值的列,如果列中有NULL值,则此索引就无效")]),s._v(" "),t("li",[s._v("尽量使用断索引")]),s._v(" "),t("li",[s._v("一条语句只使用一个索引,如果"),t("code",[s._v("where")]),s._v("中使用了索引,"),t("code",[s._v("order by")]),s._v("中是不会使用索引的")]),s._v(" "),t("li",[s._v("like语句只有类似'aaa%'的条件才会使用索引")]),s._v(" "),t("li",[s._v("在列上进行计算会导致索引失效")])]),s._v(" "),t("h3",{attrs:{id:"sql执行计划"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sql执行计划"}},[s._v("#")]),s._v(" SQL执行计划")]),s._v(" "),t("p",[s._v("sql执行计划就是一条SQL对表的操作顺序,使用"),t("code",[s._v("EXPLAIN")]),s._v("关键字写在一条SQL前面进行执行,就可以看到这条SQL的执行计划了会出现有如下字段的表格")]),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("id")])]),s._v(" "),t("p",[s._v("表示查询中select子句或操作表的顺序,id的值越大执行的优先级越高,越先执行,如果id相同,则执行顺序是从上到下")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("select_type")])]),s._v(" "),t("p",[s._v("表示查询子句的类型,类型如下:")]),s._v(" "),t("ul",[t("li",[s._v("simple:查询中不包含子查询或者 union")]),s._v(" "),t("li",[s._v("primary:包含子查询或者其他复杂子部分的语句")]),s._v(" "),t("li",[s._v("subquery:包含在select 或者 where后面的子查询")]),s._v(" "),t("li",[s._v("derived:包含在 from 后面的的子查询")]),s._v(" "),t("li",[s._v("union:在union 后的查询语句")]),s._v(" "),t("li",[s._v("union result:从UNION中获取结果集")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("table")]),s._v("  表示要操作的数据表")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("partitions")]),s._v(" 要操作的表分区")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("type")])]),s._v(" "),t("p",[s._v("表示访问类型,类型如下")]),s._v(" "),t("p",[t("code",[s._v("ALL")]),s._v("   扫描全表数据")]),s._v(" "),t("p",[t("code",[s._v("index")]),s._v(" 遍历索引")]),s._v(" "),t("p",[t("code",[s._v("range")]),s._v(" 索引范围查找")]),s._v(" "),t("p",[t("code",[s._v("index_subquery")]),s._v(" 在子查询中使用 ref")]),s._v(" "),t("p",[t("code",[s._v("unique_subquery")]),s._v(" 在子查询中使用 eq_ref")]),s._v(" "),t("p",[t("code",[s._v("ref_or_null")]),s._v(" 对"),t("code",[s._v("Null")]),s._v("进行索引的优化的 ref")]),s._v(" "),t("p",[t("code",[s._v("fulltext")]),s._v(" 使用全文索引")]),s._v(" "),t("p",[t("code",[s._v("ref")]),s._v("   使用非唯一索引查找数据")]),s._v(" "),t("p",[t("code",[s._v("eq_ref")]),s._v(" 在"),t("code",[s._v("join")]),s._v("查询中使用"),t("code",[s._v("PRIMARY KEY")]),s._v("or"),t("code",[s._v("UNIQUE NOT NULL")]),s._v("索引关联。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("possible_keys")]),s._v("  有可能使用的索引")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("key")]),s._v("   实际使用的索引")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("key_len")]),s._v(" 索引长度")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("ref")]),s._v("   表示上述表的连接匹配条件，即哪些列或常量被用于查找索引列上的值")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("rows")]),s._v("  结果集数目的估算数")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("filtered")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("extra")]),s._v(" 其他信息")])])]),s._v(" "),t("p",[s._v("通过查看SQL的执行计划,可以看出复杂语句的执行顺序,是否使用索引等信息,通过执行计划,可以对SQL进行优化,对于没有使用索引的SQL要考虑加索引")]),s._v(" "),t("h3",{attrs:{id:"分析sql执行效率与优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分析sql执行效率与优化"}},[s._v("#")]),s._v(" 分析SQL执行效率与优化")]),s._v(" "),t("blockquote",[t("h4",{attrs:{id:"单表优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#单表优化"}},[s._v("#")]),s._v(" 单表优化")]),s._v(" "),t("p",[s._v("除非单表数据未来会一直不断上涨，否则"),t("strong",[s._v("不要一开始就考虑拆分")]),s._v("，拆分会带来逻辑、部署、运维的各种复杂度，一般以整型值为主的表在"),t("strong",[s._v("千万级")]),s._v("以下，字符串为主的表在"),t("strong",[s._v("五百万")]),s._v("以下是没有太大问题的。")]),s._v(" "),t("p",[s._v("而事实上很多时候 MySQL 单表的性能依然有不少优化空间，甚至能正常支撑"),t("strong",[s._v("千万级")]),s._v("以上的数据量。")]),s._v(" "),t("h4",{attrs:{id:"字段"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字段"}},[s._v("#")]),s._v(" 字段")]),s._v(" "),t("ul",[t("li",[s._v("尽量使用 "),t("code",[s._v("TINYINT")]),s._v("、 "),t("code",[s._v("SMALLINT")]),s._v("、 "),t("code",[s._v("MEDIUM_INT")]),s._v(" 作为整数类型而非 "),t("code",[s._v("INT")]),s._v("，如果非负则加上 "),t("code",[s._v("UNSIGNED")])]),s._v(" "),t("li",[t("code",[s._v("VARCHAR")]),s._v(" 的长度只分配真正需要的空间")]),s._v(" "),t("li",[s._v("使用枚举或整数代替字符串类型")]),s._v(" "),t("li",[s._v("尽量使用 "),t("code",[s._v("TIMESTAMP")]),s._v(" 而非 "),t("code",[s._v("DATETIME")])]),s._v(" "),t("li",[s._v("单表不要有太多字段，建议在 "),t("strong",[s._v("20")]),s._v(" 以内")]),s._v(" "),t("li",[s._v("避免使用 "),t("code",[s._v("NULL")]),s._v(" 字段，很难查询优化且占用额外索引空间")]),s._v(" "),t("li",[s._v("用整型来存 "),t("strong",[s._v("IP")])])]),s._v(" "),t("h4",{attrs:{id:"索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引"}},[s._v("#")]),s._v(" 索引")]),s._v(" "),t("ul",[t("li",[s._v("索引并不是越多越好，要根据查询有针对性的创建，考虑在 "),t("code",[s._v("WHERE")]),s._v(" 和 "),t("code",[s._v("ORDER BY")]),s._v(" 命令上涉及的列建立索引，可根据 "),t("code",[s._v("EXPLAIN")]),s._v(" 来查看是否用了索引还是全表扫描")]),s._v(" "),t("li",[s._v("应尽量避免在 "),t("code",[s._v("WHERE")]),s._v(" 子句中对字段进行 "),t("code",[s._v("NULL")]),s._v(" 值判断，否则将导致引擎放弃使用索引而进行全表扫描")]),s._v(" "),t("li",[s._v('值分布很稀少的字段不适合建索引，例如"性别"这种只有两三个值的字段')]),s._v(" "),t("li",[s._v("字符字段只建前缀索引")]),s._v(" "),t("li",[s._v("字符字段最好不要做主键")]),s._v(" "),t("li",[s._v("不用外键，由程序保证约束")]),s._v(" "),t("li",[s._v("尽量不用 "),t("code",[s._v("UNIQUE")]),s._v("，由程序保证约束")]),s._v(" "),t("li",[s._v("使用多列索引时主意顺序和查询条件保持一致，同时删除不必要的单列索引")])]),s._v(" "),t("h4",{attrs:{id:"查询sql"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查询sql"}},[s._v("#")]),s._v(" 查询SQL")]),s._v(" "),t("ul",[t("li",[s._v("可通过开启慢查询日志来找出较慢的 SQL")]),s._v(" "),t("li",[s._v("不做列运算： "),t("code",[s._v("SELECT id WHERE age+1=10")]),s._v("，任何对列的操作都将导致表扫描，它包括数据库教程函数、计算表达式等等，查询时要尽可能将操作移至等号右边")]),s._v(" "),t("li",[s._v("sql 语句尽可能简单：一条 sql 只能在一个 cpu 运算；大语句拆小语句，减少锁时间；一条大sql 可以堵死整个库")]),s._v(" "),t("li",[s._v("不用 "),t("code",[s._v("SELECT *")])]),s._v(" "),t("li",[t("code",[s._v("OR")]),s._v(" 改写成 "),t("code",[s._v("IN")]),s._v("： "),t("code",[s._v("OR")]),s._v(" 的效率是 n 级别， "),t("code",[s._v("IN")]),s._v(" 的效率是 log(n) 级别，"),t("code",[s._v("IN")]),s._v(" 的个数建议控制在 200 以内")]),s._v(" "),t("li",[s._v("不用函数和触发器，在应用程序实现")]),s._v(" "),t("li",[s._v("避免 "),t("code",[s._v("%xxx")]),s._v(" 式查询")]),s._v(" "),t("li",[s._v("少用 "),t("code",[s._v("JOIN")])]),s._v(" "),t("li",[s._v("使用同类型进行比较，比如用 '123' 和 '123' 比， 123 和 123 比")]),s._v(" "),t("li",[s._v("尽量避免在 "),t("code",[s._v("WHERE")]),s._v(" 子句中使用 "),t("code",[s._v("!=")]),s._v(" 或 "),t("code",[s._v("<>")]),s._v(" 操作符，否则将引擎放弃使用索引而进行全表扫描")]),s._v(" "),t("li",[s._v("对于连续数值，使用 "),t("code",[s._v("BETWEEN")]),s._v(" 不用 "),t("code",[s._v("IN")]),s._v("： "),t("code",[s._v("SELECT id FROM t WHERE num BETWEEN 1 AND 5")])]),s._v(" "),t("li",[s._v("列表数据不要拿全表，要使用 "),t("code",[s._v("LIMIT")]),s._v(" 来分页，每页数量也不要太大")])]),s._v(" "),t("p",[s._v("作者：低至一折起\n链接：https://juejin.im/post/5b7d52afe51d453885030b91\n来源：掘金\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。")])])])}),[],!1,null,null,null);e.default=_.exports}}]);